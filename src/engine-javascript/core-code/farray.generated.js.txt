/*
 * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>
 *
 * BSD Simplified License.
 * For information on usage and redistribution, and for a DISCLAIMER OF ALL
 * WARRANTIES, see the file, "LICENSE.txt," in this distribution.
 *
 * See https://github.com/sebpiq/WebPd_pd-parser for documentation
 *
 */
const _farray_ARRAYS = new Map();
const _farray_SKEDULER = sked_create(false);
// =========================== EXPORTED API
function x_farray_createListOfArrays() {
    const farray = [];
    return farray;
}
function x_farray_pushToListOfArrays(arrays, array) {
    arrays.push(array);
}
function x_farray_getListOfArraysLength(arrays) {
    return arrays.length;
}
function x_farray_getListOfArraysElem(arrays, index) {
    return arrays[index];
}
// =========================== FARRAY API
/**
 * @callback Called immediately if the array exists, and subsequently, everytime
 * the array is set again.
 */
function farray_subscribeChanges(arrayName, callback) {
    const id = sked_subscribe(_farray_SKEDULER, arrayName, callback);
    if (_farray_ARRAYS.has(arrayName)) {
        callback(arrayName);
    }
    return id;
}
function farray_cancelSubscription(id) {
    sked_cancel(_farray_SKEDULER, id);
}
function farray_get(arrayName) {
    if (!_farray_ARRAYS.has(arrayName)) {
        throw new Error('Unknown array ' + arrayName);
    }
    return _farray_ARRAYS.get(arrayName);
}
function farray_has(arrayName) {
    return _farray_ARRAYS.has(arrayName);
}
function farray_set(arrayName, array) {
    _farray_ARRAYS.set(arrayName, array);
    sked_emit(_farray_SKEDULER, arrayName);
}
