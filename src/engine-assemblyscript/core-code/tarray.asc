/*
 * Copyright (c) 2012-2020 SÃ©bastien Piquemal <sebpiq@gmail.com>
 *
 * BSD Simplified License.
 * For information on usage and redistribution, and for a DISCLAIMER OF ALL
 * WARRANTIES, see the file, "LICENSE.txt," in this distribution.
 *
 * See https://github.com/sebpiq/WebPd_pd-parser for documentation
 *
 */

type TypedArray = ${FloatArrayType}

export function tarray_createListOfArrays(): TypedArray[] {
    const tarray: TypedArray[] = []
    return tarray
}

export function tarray_pushToListOfArrays(arrays: TypedArray[], array: TypedArray): void {
    arrays.push(array)
}

export function tarray_getListOfArraysLength(arrays: TypedArray[]): i32 {
    return arrays.length
}

export function tarray_getListOfArraysElem(arrays: TypedArray[], index: i32): TypedArray {
    return arrays[index]
}

export function tarray_unpack (buffer: ArrayBuffer): ${FloatArrayType} {
    let i: i32 = 0
    const arrayData: DataView = new DataView(buffer)
    const arrayLength: i32 = buffer.byteLength / sizeof<${FloatType}>()
    const array: ${FloatArrayType} = new ${FloatArrayType}(arrayLength)
    for (i = 0; i < arrayLength; i++) {
        array[i] = arrayData.${getFloat}(i * sizeof<${FloatType}>())
    }
    return array
}